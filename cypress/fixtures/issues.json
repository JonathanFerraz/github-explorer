[
  {
    "url": "https://api.github.com/repos/facebook/react/issues/22634",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/22634/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/22634/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/22634/events",
    "html_url": "https://github.com/facebook/react/issues/22634",
    "id": 1037495739,
    "node_id": "I_kwDOAJy2Ks491u27",
    "number": 22634,
    "title": "Await detection in act() is not compatible with react-native",
    "user": {
      "login": "getsaf",
      "id": 10538908,
      "node_id": "MDQ6VXNlcjEwNTM4OTA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/10538908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/getsaf",
      "html_url": "https://github.com/getsaf",
      "followers_url": "https://api.github.com/users/getsaf/followers",
      "following_url": "https://api.github.com/users/getsaf/following{/other_user}",
      "gists_url": "https://api.github.com/users/getsaf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/getsaf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/getsaf/subscriptions",
      "organizations_url": "https://api.github.com/users/getsaf/orgs",
      "repos_url": "https://api.github.com/users/getsaf/repos",
      "events_url": "https://api.github.com/users/getsaf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/getsaf/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2021-10-27T14:29:46Z",
    "updated_at": "2021-10-27T14:29:46Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm posting this here to get some feedback on a potential fix for this issue. I have a work-around (see below) but would like some guidance on whether or not this workaround is sand and satisfies the original intent of the await detection.\r\n\r\n[Related issue in `@testing-library/react-native` repo](https://github.com/callstack/react-native-testing-library/issues/379)\r\n\r\n### Synopsis\r\nThis await detection in `ReactAct` is somewhat incompatible with core.js promise implementation which is used by react-native causing false-positive errors to be dumped to the console.\r\n\r\n| `You called act(async () => ...) without await`\r\n\r\n### Notes\r\n* The issue only occurs when `act` is wrapped in a module dependency (aka: `@testing-library/react-native`)\r\n* The issue only occurs on the *second* awaited promise in a test\r\n\r\n### Version Info\r\n\"react-test-renderer\": \"17.0.2\"\r\n\"jest\": \"26.6.3\"\r\n\r\n### Problem area\r\nhttps://github.com/facebook/react/blob/a724a3b578dce77d427bef313102a4d0e978d9b4/packages/react/src/ReactAct.js#L95-L97\r\n### Reproduction\r\n\r\n```sh\r\nnpx react-native init promiseTest\r\ncd promiseTest\r\n\r\n# Create a fake node module that wraps act\r\nmkdir node_modules/foo\r\ncat <<EOT > node_modules/foo/wrapAct.js\r\n'use strict';\r\nconst  act =  require( 'react-test-renderer').act;\r\nexports.__esModule = true;\r\n\r\nexports.default = async function wrapAct(action) {\r\n  await act(action)\r\n}\r\nEOT\r\n\r\n# Create a test that uses the module\r\ncat <<EOT > act.test.js\r\nimport wrapAct from 'foo/wrapAct';\r\n\r\ndescribe('async', () => {\r\n  it('warns when act is wrapped in a package', async () => {\r\n    await wrapAct(async () => {\r\n      console.log('first');\r\n    });\r\n    await wrapAct(async () => {\r\n      console.log('second');\r\n    });\r\n  });\r\n});\r\nEOT\r\n\r\nyarn test\r\n```\r\n\r\n### Produces this error\r\n```\r\n PASS  ./act.test.js\r\n  ● Console\r\n\r\n    console.log\r\n      first\r\n\r\n      at _callee$ (act.test.js:6:15)\r\n\r\n    console.log\r\n      second\r\n\r\n      at _callee2$ (act.test.js:9:15)\r\n\r\n    console.error\r\n      Warning: You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);\r\n\r\n      at printWarning (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:68:30)\r\n      at error (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:44:5)\r\n      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:15297:13\r\n      at tryCallOne (node_modules/promise/lib/core.js:37:12)\r\n      at node_modules/promise/lib/core.js:123:15\r\n      at flush (node_modules/asap/raw.js:50:29)\r\n```\r\n\r\n### Workaround\r\nI have patched the `react-test-renderer` package to use `finally` instead of `Promise.resolve().then(() => {}).then(...)`:\r\n```diff\r\ndiff --git a/node_modules/react-test-renderer/cjs/react-test-renderer.development.js b/node_modules/react-test-renderer/cjs/react-test-renderer.development.js\r\nindex f401dd2..ac4bb87 100644\r\n--- a/node_modules/react-test-renderer/cjs/react-test-renderer.development.js\r\n+++ b/node_modules/react-test-renderer/cjs/react-test-renderer.development.js\r\n@@ -15292,7 +15292,7 @@ function act(callback) {\r\n     {\r\n       if (typeof Promise !== 'undefined') {\r\n         //eslint-disable-next-line no-undef\r\n-        Promise.resolve().then(function () {}).then(function () {\r\n+        result.finally(function () {\r\n           if (called === false) {\r\n             error('You called act(async () => ...) without await. ' + 'This could lead to unexpected testing behaviour, interleaving multiple act ' + 'calls and mixing their scopes. You should - await act(async () => ...);');\r\n           }\r\n\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/22634/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/22634/timeline",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/22628",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/22628/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/22628/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/22628/events",
    "html_url": "https://github.com/facebook/react/pull/22628",
    "id": 1035795258,
    "node_id": "PR_kwDOAJy2Ks4tqK9C",
    "number": 22628,
    "title": " Fixed typos",
    "user": {
      "login": "MalikIdreesHasanKhan",
      "id": 77000356,
      "node_id": "MDQ6VXNlcjc3MDAwMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/77000356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MalikIdreesHasanKhan",
      "html_url": "https://github.com/MalikIdreesHasanKhan",
      "followers_url": "https://api.github.com/users/MalikIdreesHasanKhan/followers",
      "following_url": "https://api.github.com/users/MalikIdreesHasanKhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/MalikIdreesHasanKhan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MalikIdreesHasanKhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MalikIdreesHasanKhan/subscriptions",
      "organizations_url": "https://api.github.com/users/MalikIdreesHasanKhan/orgs",
      "repos_url": "https://api.github.com/users/MalikIdreesHasanKhan/repos",
      "events_url": "https://api.github.com/users/MalikIdreesHasanKhan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MalikIdreesHasanKhan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2021-10-26T03:54:06Z",
    "updated_at": "2021-10-26T07:59:06Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/22628",
      "html_url": "https://github.com/facebook/react/pull/22628",
      "diff_url": "https://github.com/facebook/react/pull/22628.diff",
      "patch_url": "https://github.com/facebook/react/pull/22628.patch"
    },
    "body": "<!--\r\n  Thanks for submitting a pull request!\r\n  We appreciate you spending the time to work on these changes. Please provide enough information so that others can review your pull request. The three fields below are mandatory.\r\n\r\n  Before submitting a pull request, please make sure the following is done:\r\n\r\n  1. Fork [the repository](https://github.com/facebook/react) and create your branch from `main`.\r\n  2. Run `yarn` in the repository root.\r\n  3. If you've fixed a bug or added code that should be tested, add tests!\r\n  4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n  5. Run `yarn test --prod` to test in the production environment. It supports the same options as `yarn test`.\r\n  6. If you need a debugger, run `yarn debug-test --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n  7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n  8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\n  Learn more about contributing: https://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\nFixes typos\r\n<!--\r\n Explain the **motivation** for making this change. What existing problem does the pull request solve?\r\n-->\r\n\r\n## How did you test this change?\r\nIt is a small change, so very likely no tests are required.\r\n<!--\r\n  Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes the user interface.\r\n  How exactly did you verify that your PR solves the issue you wanted to solve?\r\n  If you leave this empty, your PR will very likely be closed.\r\n-->\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/22628/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/22628/timeline",
    "performed_via_github_app": null
  }
]
